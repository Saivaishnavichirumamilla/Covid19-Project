{
	"name": "DF_case_deaths_transform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_case_death_new",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "sourcecountrylookup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_death_cases_transformed",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as long,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcecountrylookup",
				"source1 filter(continent == 'Asia') ~> filter1",
				"filter1 pivot(groupBy(country,",
				"          country_code,",
				"          continent,",
				"          reported_date = date),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     total_ = sum(daily_count),",
				"     columnNaming: '$N$V',",
				"     lateral: false) ~> pivot1",
				"pivot1 sort(desc({total_confirmed cases}, false),",
				"     desc(total_deaths, false)) ~> sort1",
				"sort1, sourcecountrylookup lookup(country_code == country_code_3_digit,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(country_code_2_digit, false),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          continent = pivot1@continent,",
				"          country = pivot1@country,",
				"          country_code = country_code_2_digit,",
				"          population,",
				"          reported_date,",
				"          {total_confirmed cases},",
				"          total_deaths",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}